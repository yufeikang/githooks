# !/bin/env zsh

# This script is intended to be used as a pre-commit hook for git.

# check is has upstream remote repository
if [ -z "$(git remote -v | grep origin)" ]; then
    exit 0
fi

## 1. get repository origin url

url=$(git config --get remote.origin.url)
if [ $? -ne 0 ]; then
    echo "Error: Could not get remote.origin.url"
    exit 1
fi

## 2. get workspace name, example git@bitbucket.org:workspace/repo.git

workspace=$(echo $url | cut -d':' -f 2 | cut -d'/' -f 1)

## 3. get environment config

## get environment by variable name
git_user_name=$(eval echo "\$GIT_${workspace}_name")
git_user_email=$(eval echo "\$GIT_${workspace}_email")

if [ -z "$git_user_name" ]; then
    DEBUG_ECHO "[UserSwitch] : Could not get GIT_${workspace}_name"
    exit 0
fi

DEBUG_ECHO "[UserSwitch] git_user_name: $git_user_name"

## 4. check if config is exist, set it

# set git config user.name if not exist or not equal
exist_user_name=$(git config --local --get user.name)
if [ "$exist_user_name" != "$git_user_name" ]; then
    echo "[PRE-COMMIT] set git config user.name -> "$git_user_name""
    git config user.name "$git_user_name"
fi

# set git config user.email if not exist or not equal
exist_user_email=$(git config --local --get user.email)
if [ "$exist_user_email" != "$git_user_email" ]; then
    echo "[PRE-COMMIT] set git config user.email -> $git_user_email"
    git config user.email "$git_user_email"
fi
